trim url#something
lire robot.txt et le mettre en cache
https://dev.to/chanh_le/setting-up-redis-as-a-message-queue-a-step-by-step-guide-5gj0
Bayla "fille de dieu"
Belyea
Adnet
mace
beyla

Crawler
go
LRU
https://github.com/bluele/gcache
go run .

Stop words: https://raw.githubusercontent.com/stopwords-iso/stopwords-fr/refs/heads/master/stopwords-fr.txt
Indexer
python
// TODO trouver une solution pour qrimprimerexportercr√©er
python3 indexer.py

Outlink
go
// TODO mettre les whitelist et blacklist dans des fichiers txt
go run .

Client
Angular
https://ngxui.com/
pnpm start

Query server
Spring
mvn clean package spring-boot:repackage
java -jar target/query-1.0-SNAPSHOT.jar



redis-cli -p 26300 --scan --pattern '*' | xargs -L 1 redis-cli -p 26300 DUMP
redis-cli -p 26305 --scan --pattern '*' | xargs -L 1 redis-cli -p 26305 DUMP
docker exec -it 9 /bin/bash
redis-cli -p 26305 SADD queue "https://fr.wikipedia.org/wiki/Brunissage"



mongosh
use indexation
var collections = db.getCollectionNames();
for(var i = 0; i< collections.length; i++){    
   print('Collection: ' + collections[i]); // print the name of each collection
   db.getCollection(collections[i]).find().forEach(printjson); //and then print the json of each of its elements
}